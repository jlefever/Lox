// This file was generated by Lox.Tools.AstGenerator on 9/4/2019 12:06:43 AM
using System.Collections.Generic;

namespace Lox
{
    public abstract class Stmt
    {
        public abstract TResult Accept<TResult>(IStmtVisitor<TResult> visitor);
    }

    public interface IStmtVisitor<out TResult>
    {
        TResult VisitBlockStmt(Block stmt);
        TResult VisitExpressionStmt(Expression stmt);
        TResult VisitPrintStmt(Print stmt);
        TResult VisitVarStmt(Var stmt);
    }

    public class Block : Stmt
    {
        public ICollection<Stmt> Statements { get; }
    
        public Block (ICollection<Stmt> statements)
        {
            Statements = statements;
        }
    
        public override TResult Accept<TResult>(IStmtVisitor<TResult> visitor)
        {
            return visitor.VisitBlockStmt(this);
        }
    }

    public class Expression : Stmt
    {
        public Expr Expr { get; }
    
        public Expression (Expr expr)
        {
            Expr = expr;
        }
    
        public override TResult Accept<TResult>(IStmtVisitor<TResult> visitor)
        {
            return visitor.VisitExpressionStmt(this);
        }
    }

    public class Print : Stmt
    {
        public Expr Expr { get; }
    
        public Print (Expr expr)
        {
            Expr = expr;
        }
    
        public override TResult Accept<TResult>(IStmtVisitor<TResult> visitor)
        {
            return visitor.VisitPrintStmt(this);
        }
    }

    public class Var : Stmt
    {
        public Token Name { get; }
        public Expr Initializer { get; }
    
        public Var (Token name, Expr initializer)
        {
            Name = name;
            Initializer = initializer;
        }
    
        public override TResult Accept<TResult>(IStmtVisitor<TResult> visitor)
        {
            return visitor.VisitVarStmt(this);
        }
    }
}
